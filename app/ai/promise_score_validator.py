class PromiseScoreValidator:
    """
    Defines configuration and validation rules for the AI-generated "Promise Score".

    This class holds parameters like the number of stocks to analyze and the tolerance for weight validation.
    It provides methods to ensure that the weights generated by the AI for calculating the Promise Score are within acceptable bounds
    and use a predefined set of valid metrics.
    """
    AVAILABLE_METRICS: list[str] = [
        'Total_Value',
        'Total_Delta_Value',
        'Max_Portfolio_Pct',
        'Buyer_Count',
        'Seller_Count',
        'Holder_Count',
        'New_Holder_Count',
        'Net_Buyers',
        'Close_Count'
    ]


    def __init__(self, top_n_stocks: int = 30, weight_tolerance: float = 0.05):
        self.top_n_stocks = top_n_stocks
        self.weight_tolerance = weight_tolerance


    @staticmethod
    def validate_weights(weights: dict, tolerance: float = 0.05) -> bool:
        """
        Validates that the sum of weights is within the defined tolerance.

        The sum of weights must be between 1.0 - tolerance and 1.0 + tolerance.

        Args:
            weights (dict): A dictionary where keys are metric names and values are their weights.
            tolerance (float): The allowed deviation from 1.0 for the sum of weights.

        Returns:
            bool: True if the sum of weights is valid, False otherwise.
        """
        return 1.0 - tolerance <= sum(weights.values()) <= 1.0 + tolerance


    @staticmethod
    def validate_metrics(metrics: list) -> list:
        """
        Checks for any metrics that are not in the list of available metrics.

        Args:
            metrics (list): A list of metric names to validate.
        Returns:
            list: A list of invalid metric names. An empty list signifies all metrics are valid.
        """
        return [m for m in metrics if m not in PromiseScoreValidator.AVAILABLE_METRICS]
